###
enumerate
###
--> 描述：
enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在for循环当中。
--> 与普通for循环的区别：
普通for循环👇
i = 0
seq = ['one', 'two', 'three']
for element in seq:
... print i, seq[i]
... i +=1
... 
[out]:
0 one
1 two
2 three
enumerate循环👇
seq = ['one', 'two', 'three']
for i, element in enumerate(seq):
... print i, element
... 
[out]:
0 one
1 two
2 three
--> 统计文件行数，可以利用enumerate()：
count = 0
for index, line in enumerate(open(filepath,'r'))： 
    count += 1


###
sorted
###
--> 描述：
sorted() 函数对所有可迭代的对象进行排序操作，返回一个新的有序列表。
--> 与sort的区别：
sort 是应用在 list 上的方法，sorted 可以对所有可迭代的对象进行排序操作。
list 的 sort 方法返回的是对已经存在的列表进行操作，无返回值，而内建函数 sorted 方法返回的是一个新的 list，而不是在原来的基础上进行的操作。
--> 语法：
sorted(iterable, cmp=None, key=None, reverse=False)
参数说明：
iterable -- 可迭代对象。
cmp -- 比较的函数，这个具有两个参数，参数的值都是从可迭代对象中取出，此函数必须遵守的规则为，大于则返回1，小于则返回-1，等于则返回0。
key -- 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。
reverse -- 排序规则，reverse = True 降序 ， reverse = False 升序（默认）。
--> 实例：
students = [('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)]
sorted(students, key=lambda s: s[2], reverse=True)        # 按年龄降序排序
[out]：
[('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)]


###

###





